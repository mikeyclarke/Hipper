# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    postmark_base_url: 'https://api.postmarkapp.com'
    transactional_email_from_addr: 'notifications@tryhleo.com'
    transactional_email_reply_to_addr: 'help@tryhleo.com'
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true        # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    Redis:
        class: Redis
        calls:
            - method: connect
              arguments:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Lithos\:
        resource: '../src/php/*'
        exclude: '../src/php/{data,DependencyInjection,Session,Tests,AppKernel.php,BrandSiteKernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Lithos\Controller\:
        resource: '../src/php/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Lithos\TransactionalEmail\PostmarkApiClientFactory:
        arguments:
            $apiBaseUrl: '%postmark_base_url%'
            $apiToken: '%env(POSTMARK_SERVER_TOKEN)%'

    Lithos\TransactionalEmail\VerifyEmailAddressEmail:
        arguments:
            $emailFromAddress: '%transactional_email_from_addr%'
            $emailReplyToAddress: '%transactional_email_reply_to_addr%'

    Lithos\TransactionalEmail\BulkInvite:
        arguments:
            $emailFromAddress: '%transactional_email_from_addr%'
            $emailReplyToAddress: '%transactional_email_reply_to_addr%'

    Lithos\Subscriber\ResponseHeadersSubscriber:
        arguments:
            $cspEnabled: '%env(bool:CSP_ENABLED)%'
            $hstsEnabled: '%env(bool:HSTS_ENABLED)%'
            $hstsMaxAge: '%env(int:HSTS_MAX_AGE)%'

    Lithos\Security\ContentSecurityPolicyBuilder:
        arguments:
            $assetDomain: '%env(string:ASSET_DOMAIN)%'

    Lithos\Person\NameRepresentation:
        autowire: false

    lithos_session_storage:
        class: Lithos\Session\SessionStorage
        arguments: ['%session.storage.options%', '@session.handler', '@session.storage.metadata_bag', '@request_stack']

    onboarding_verified_person_middleware:
        class: Lithos\Onboarding\VerifiedPersonMiddleware

    require_json_content_type_middleware:
        class: Lithos\Http\RequireJsonContentTypeMiddleware

    app_onboarding_completed_middleware:
        class: Lithos\App\OnboardingCompletedMiddleware
