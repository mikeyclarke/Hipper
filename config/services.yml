# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    postmark_base_url: 'https://api.postmarkapp.com'
    transactional_email_from_addr: 'notifications@usehipper.com'
    transactional_email_reply_to_addr: 'help@usehipper.com'
    locale: 'en'
    env(CSP_ENABLED): false
    env(HSTS_ENABLED): false
    env(HSTS_MAX_AGE): 300
    env(RESOURCE_HINTS_ENABLED): false
    document_allowed_nodes:
        - 'blockquote'
        - 'code_block'
        - 'hard_break'
        - 'heading'
        - 'horizontal_rule'
        - 'image'
        - 'list_item'
        - 'ordered_list'
        - 'paragraph'
        - 'text'
        - 'unordered_list'
    document_allowed_marks:
        - 'link'
        - 'emphasis'
        - 'strong'
        - 'code'
        - 'strike'
    asset_integrity_manifest_path: '%kernel.project_dir%/public-roots/assets/public/build/integrity.json'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true        # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    Redis:
        class: Redis
        calls:
            - method: connect
              arguments:
                  - '%env(REDIS_HOST)%'
                  - '%env(int:REDIS_PORT)%'
            - method: auth
              arguments:
                  - '%env(REDIS_PASSWORD)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    Hipper\:
        resource: '../src/php/*'
        exclude: '../src/php/{data,DependencyInjection,Session,Tests,AppKernel.php,ConsoleKernel.php,SignUpFlowKernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    Hipper\Controller\:
        resource: '../src/php/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Hipper\FrontEnd\App\Controller\Document\CreateDocumentController:
        arguments:
            $documentAllowedMarks: '%document_allowed_marks%'
            $documentAllowedNodes: '%document_allowed_nodes%'

    Hipper\Asset\AssetIntegrity:
        arguments:
            $manifestPath: '%asset_integrity_manifest_path%'

    Hipper\Document\Renderer\HtmlFragmentRendererContext:
        autowire: false

    Hipper\Document\Renderer\HtmlRenderer:
        arguments:
            $allowedMarks: '%document_allowed_marks%'
            $allowedNodes: '%document_allowed_nodes%'

    Hipper\TransactionalEmail\PostmarkApiClientFactory:
        arguments:
            $apiBaseUrl: '%postmark_base_url%'
            $apiToken: '%env(POSTMARK_SERVER_TOKEN)%'

    Hipper\TransactionalEmail\VerifyEmailAddressEmail:
        arguments:
            $emailFromAddress: '%transactional_email_from_addr%'
            $emailReplyToAddress: '%transactional_email_reply_to_addr%'

    Hipper\TransactionalEmail\BulkInvite:
        arguments:
            $emailFromAddress: '%transactional_email_from_addr%'
            $emailReplyToAddress: '%transactional_email_reply_to_addr%'

    Hipper\Subscriber\ResponseHeadersSubscriber:
        arguments:
            $cspEnabled: '%env(bool:CSP_ENABLED)%'
            $hstsEnabled: '%env(bool:HSTS_ENABLED)%'
            $hstsMaxAge: '%env(int:HSTS_MAX_AGE)%'
            $resourceHintsEnabled: '%env(bool:RESOURCE_HINTS_ENABLED)%'

    Hipper\Subscriber\TwigGlobalsSubscriber:
        arguments:
            $assetDomain: 'https://%env(string:ASSET_DOMAIN)%'

    Hipper\Security\ContentSecurityPolicyBuilder:
        arguments:
            $assetDomain: '%env(string:ASSET_DOMAIN)%'

    Hipper\Person\NameRepresentation:
        autowire: false

    Hipper\Validation\Constraints\DocumentStructureValidator:
        arguments:
            $documentAllowedMarks: '%document_allowed_marks%'
            $documentAllowedNodes: '%document_allowed_nodes%'

    hipper_session_storage:
        class: Hipper\Session\SessionStorage
        arguments: ['%session.storage.options%', '@session.handler', '@session.storage.metadata_bag', '@request_stack']

    onboarding_verified_person_middleware:
        class: Hipper\FrontEnd\SignUpFlow\Middleware\VerifiedPersonMiddleware

    require_json_content_type_middleware:
        class: Hipper\Http\RequireJsonContentTypeMiddleware

    app_onboarding_completed_middleware:
        class: Hipper\FrontEnd\App\Middleware\Organization\OnboardingCompletedMiddleware

    team_model_from_url_id_middleware:
        class: Hipper\FrontEnd\App\Middleware\Team\TeamModelFromUrlIdMiddleware

    knowledgebase_routing_middleware:
        class: Hipper\FrontEnd\App\Middleware\Knowledgebase\KnowledgebaseRoutingMiddleware

    project_model_from_url_id_middleware:
        class: Hipper\FrontEnd\App\Middleware\Project\ProjectModelFromUrlIdMiddleware
