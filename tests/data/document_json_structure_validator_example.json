{
  "type": "doc",
  "content": [
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Summary"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Autosize is a small, stand-alone script to automatically adjust textarea height to fit text."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "Demo"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Full documentation and a demo can be found at "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "http://jacklmoore.com/autosize",
                "title": null
              }
            }
          ],
          "text": "jacklmoore.com/autosize"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "Install via NPM"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npm install autosize"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "Browser compatibility"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Chrome Firefox IE Safari iOS Safari Android Opera Mini Windows Phone IE yes yes 9 yes yes 4 ? 8.1"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "Usage"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The autosize function accepts a single textarea element, or an array or array-like object (such as a NodeList or jQuery collection) of textarea elements."
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "// from a NodeList\nautosize(document.querySelectorAll('textarea'));\n\n// from a single Node\nautosize(document.querySelector('textarea'));\n\n// from a jQuery collection\nautosize($('textarea'));"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Released under the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "http://www.opensource.org/licenses/mit-license.php",
                "title": null
              }
            }
          ],
          "text": "MIT License"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "http://img.shields.io/badge/license-MIT-brightgreen.svg",
            "alt": "License",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iluminar/goodwork/blob/dev/LICENSE",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://travis-ci.org/iluminar/goodwork.svg?branch=dev",
            "alt": "Build Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://travis-ci.org/iluminar/goodwork",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://poser.pugx.org/iluminar/goodwork/v/stable",
            "alt": "Stable Version",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iluminar/goodwork",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/badge/Laravel-5.8-brightgreen.svg?style=flat",
            "alt": "Laravel Version",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/laravel/laravel",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/badge/vue-2.5.13-brightgreen.svg?style=flat",
            "alt": "VueJS Version",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/vuejs/vue",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://codecov.io/gh/iluminar/goodwork/branch/master/graph/badge.svg",
            "alt": "codecov",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://codecov.io/gh/iluminar/goodwork",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://styleci.io/repos/81873619/shield?branch=dev&style=flat",
            "alt": "StyleCI",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://styleci.io/repos/81873619",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/badge/join%20on-slack-green.svg",
            "alt": "Join on slack",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://join.slack.com/t/iluminar/shared_invite/enQtNDY0Mzc3NDkwOTY1LTJhZTNiYmMxZmE4NGU5MTJhODI5OWMyNjc4ZmIyNDVhODRhMGUzNDU0MmM1OGRmZjBiYWM0NjcwNWRjMDJjNTA",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/badge/join%20on-goodwork-orange.svg",
            "alt": "Join on goodwork",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://goodworkfor.life/register/invite-link/ovCPAFpnwIhrvqUrlvynarP9HVRBC5mH",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://parsedown.org/public/logos/logo.png",
            "alt": "Goodwork",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Self hosted project management and collaboration tool inspired by basecamp."
        }
      ]
    },
    {
      "type": "horizontal_rule"
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#about-goodwork",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "Overview"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#demo",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "Demo"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#installation",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "Installation"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#screenshots-top",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "Screenshots"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#contributing-top",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "Contributing"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#supporting-top",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "Supporting"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#credits-top",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "Credits"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#license-top",
                "title": null
              }
            },
            {
              "type": "strong"
            }
          ],
          "text": "License"
        }
      ]
    },
    {
      "type": "horizontal_rule"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "About Goodwork"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Goodwork is a simple project management and collaboration tool for software teams. It is open source and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iluminar/goodwork/blob/dev/LICENSE",
                "title": null
              }
            }
          ],
          "text": "MIT licensed"
        },
        {
          "type": "text",
          "text": ". Goodwork is a self-hosted software so no dependency on anyone and only you keep your data."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Goodwork brings you all the components required for your project to run smoothly in one place so that you have single source of truth. Instead of using a collection of tools or service which makes everything messy and hard to find important details from stuff scattered all over the place, Goodwork organizes everything in a central place where everyone in the company knows what to do, knows where things stand and find stuff without having to ask around all the time."
        }
      ]
    },
    {
      "type": "blockquote",
      "content": [
        {
          "type": "paragraph",
          "content": [
            {
              "type": "text",
              "text": "Available in 23 language"
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iluminar/goodwork/wiki/Overview",
                "title": null
              }
            }
          ],
          "text": "Overview"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Demo"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You can check out an instance of the application that we use as a guest user using below described email & password. This user has limited permission so you'll only see a handful of the features. Visit this link: "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://goodworkfor.life",
                "title": null
              }
            }
          ],
          "text": "https://goodworkfor.life"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "email: guest@example.com"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "password: guestpass"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Installation"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iluminar/goodwork/wiki/Installation#setup-using-docker",
                "title": null
              }
            }
          ],
          "text": "Install via docker"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iluminar/goodwork/wiki/Installation#setup-usual-way-if-youre-not-using-docker",
                "title": null
              }
            }
          ],
          "text": "Install manually"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Screenshots "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#about-goodwork",
                "title": null
              }
            }
          ],
          "text": "↑Top"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/oPlF1bi.png",
            "alt": "Dashboard",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/QlkS0IJ.png",
            "alt": "Create Task Form",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/sfl2hLr.png",
            "alt": "Task Board",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/J6wKeNL.png",
            "alt": "Task Details",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/DgsIScx.png",
            "alt": "Discussion Board",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/gHKGAjc.png",
            "alt": "Create Discussion Form",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/NchQpJE.png",
            "alt": "Discussion Details",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/iaQDmQR.png",
            "alt": "Files Board",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/neakUm5.png",
            "alt": "Message Board",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/C3kbApV.png",
            "alt": "Direct Message",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/MOS2k8l.png",
            "alt": "Profile Page",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/TelYaCs.png",
            "alt": "Account Page",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/FfYSOq1.png",
            "alt": "Activities",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/TfRMzuf.png",
            "alt": "Roles Board",
            "title": null
          }
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Contributing "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#about-goodwork",
                "title": null
              }
            }
          ],
          "text": "↑Top"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Thank you for considering contributing to the Goodwork! The contribution guide can be found in the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/iluminar/goodwork/wiki/Contribution-Guideline",
                "title": null
              }
            }
          ],
          "text": "Contribution Guideline"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You can join goodwork project via this link "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://goodworkfor.life/register/invite-link/ovCPAFpnwIhrvqUrlvynarP9HVRBC5mH",
                "title": null
              }
            }
          ],
          "text": "link"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Also you can join the slack channel via this "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://join.slack.com/t/iluminar/shared_invite/enQtNDY0Mzc3NDkwOTY1LTJhZTNiYmMxZmE4NGU5MTJhODI5OWMyNjc4ZmIyNDVhODRhMGUzNDU0MmM1OGRmZjBiYWM0NjcwNWRjMDJjNTA",
                "title": null
              }
            }
          ],
          "text": "link"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Supporting "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#about-goodwork",
                "title": null
              }
            }
          ],
          "text": "↑Top"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Goodwork is an MIT-licensed open source project with its ongoing development made possible thanks to the support by our amazing backers."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Support the development of \"Goodwork\" by being a patron"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://c5.patreon.com/external/logo/become_a_patron_button.png",
            "alt": "become a patron",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.patreon.com/bePatron?u=19641984",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You can also fund specific issues on Issuehunt and the money will be distributed to contributors and maintainers."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://github.com/BoostIO/issuehunt-materials/raw/master/v1/issuehunt-button-v1.svg?sanitize=true",
            "alt": "issuehunt-to-marktext",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://issuehunt.io/repos/81873619",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Security Vulnerabilities "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#about-goodwork",
                "title": null
              }
            }
          ],
          "text": "↑Top"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If you discover a security vulnerability within Goodwork, please send an e-mail to searching.nehal@gmail.com instead of creating new issue. All security vulnerabilities will be promptly addressed."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Credits "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#about-goodwork",
                "title": null
              }
            }
          ],
          "text": "↑Top"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Author: "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://github.com/Hasnayeen",
                        "title": null
                      }
                    }
                  ],
                  "text": "Nehal Hasnayeen"
                },
                {
                  "type": "text",
                  "text": " ("
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://hasnayeen.github.io",
                        "title": null
                      }
                    }
                  ],
                  "text": "https://hasnayeen.github.io"
                },
                {
                  "type": "text",
                  "text": ")"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Logo Credit: "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://github.com/Hasnayeen",
                        "title": null
                      }
                    }
                  ],
                  "text": "Nehal Hasnayeen"
                },
                {
                  "type": "text",
                  "text": " (Improved upon earlier version by "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://github.com/scriptcoded",
                        "title": null
                      }
                    }
                  ],
                  "text": "Malcolm Nihlén"
                },
                {
                  "type": "text",
                  "text": ")"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Illustrations Credit: "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://undraw.co/",
                        "title": null
                      }
                    }
                  ],
                  "text": "Undraw"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://github.com/iluminar/goodwork/graphs/contributors",
                        "title": null
                      }
                    }
                  ],
                  "text": "Full Contributors List"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/0",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/0",
                "title": null
              }
            }
          ]
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/1",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/1",
                "title": null
              }
            }
          ]
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/2",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/2",
                "title": null
              }
            }
          ]
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/3",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/3",
                "title": null
              }
            }
          ]
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/4",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/4",
                "title": null
              }
            }
          ]
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/5",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/5",
                "title": null
              }
            }
          ]
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/6",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/6",
                "title": null
              }
            }
          ]
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/images/7",
            "alt": "",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://sourcerer.io/fame/Hasnayeen/iluminar/goodwork/links/7",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "License "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#about-goodwork",
                "title": null
              }
            }
          ],
          "text": "↑Top"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Goodwork is open-sourced software licensed under the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "http://opensource.org/licenses/MIT",
                "title": null
              }
            }
          ],
          "text": "MIT license"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/github/release/buger/gor.svg?maxAge=3600",
            "alt": "GitHub release",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/releases",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://codebeat.co/badges/6427d589-a78e-416c-a546-d299b4089893",
            "alt": "codebeat",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://codebeat.co/projects/github-com-buger-gor",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://goreportcard.com/badge/github.com/buger/gor",
            "alt": "Go Report Card",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://goreportcard.com/report/github.com/buger/gor",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://badges.gitter.im/buger/gor.svg",
            "alt": "Join the chat at https://gitter.im/buger/gor",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://gitter.im/buger/gor?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg",
            "alt": "Reviewed by Hound",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://houndci.com",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "http://i.imgur.com/ZG2ki5n.png",
            "alt": "Go Replay",
            "title": null
          }
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://goreplay.org/",
                "title": null
              }
            }
          ],
          "text": "https://goreplay.org/"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "GoReplay is an open-source network monitoring tool which can record your live traffic, and use it for shadowing, load testing, monitoring and detailed analysis."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "About"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "As your application grows, the effort required to test it also grows exponentially. GoReplay offers you the simple idea of reusing your existing traffic for testing, which makes it incredibly powerful. Our state of art technique allows you to analyze and record your application traffic without affecting it. This eliminates the risks that come with putting a third party component in the critical path."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "GoReplay increases your confidence in code deployments, configuration and infrastructure changes."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "GoReplay offers unique approach for shadowing. Instead of being a proxy, GoReplay in background listen for traffic on your network interface, requiring no changes in your production infrastructure, rather then running GoReplay daemon on the same machine as your service."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://i.imgur.com/IN2xfDm.png",
            "alt": "Diagram",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Check "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "http://github.com/buger/goreplay/wiki",
                "title": null
              }
            }
          ],
          "text": "latest documentation"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Installation"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Download latest binary from "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/releases",
                "title": null
              }
            }
          ],
          "text": "https://github.com/buger/goreplay/releases"
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/wiki/Compilation",
                "title": null
              }
            }
          ],
          "text": "compile by yourself"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Getting started"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The most basic setup will be "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "sudo ./gor --input-raw :8000 --output-stdout"
        },
        {
          "type": "text",
          "text": " which acts like tcpdump. If you already have test environment you can start replaying: "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "sudo ./gor --input-raw :8000 --output-http http://staging.env"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "See the our "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/wiki/",
                "title": null
              }
            }
          ],
          "text": "documentation"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/wiki/Getting-Started",
                "title": null
              }
            }
          ],
          "text": "Getting started"
        },
        {
          "type": "text",
          "text": " page for more info."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Newsletter"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Subscribe to our "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.getdrip.com/forms/89690474/submissions/new",
                "title": null
              }
            }
          ],
          "text": "newsletter"
        },
        {
          "type": "text",
          "text": " to stay informed about the latest features and changes to Gor project."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Want to Upgrade?"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "We have created a "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://goreplay.org/pro.html",
                "title": null
              }
            }
          ],
          "text": "GoReplay PRO"
        },
        {
          "type": "text",
          "text": " extension which provides additional features such as support for binary protocols like Thrift or ProtocolBuffers, saving and replaying from cloud storage, TCP sessions replication, etc. The PRO version also includes a commercial-friendly license, dedicated support, and it also allows you to support high-quality open source development."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Problems?"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If you have a problem, please review the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/wiki/FAQ",
                "title": null
              }
            }
          ],
          "text": "FAQ"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/wiki/Troubleshooting",
                "title": null
              }
            }
          ],
          "text": "Troubleshooting"
        },
        {
          "type": "text",
          "text": " wiki pages. Searching the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/buger/goreplay/issues",
                "title": null
              }
            }
          ],
          "text": "issues"
        },
        {
          "type": "text",
          "text": " for your problem is also a good idea."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "All bug-reports and suggestions should go through Github Issues or our "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://groups.google.com/forum/#!forum/gor-users",
                "title": null
              }
            }
          ],
          "text": "Google Group"
        },
        {
          "type": "text",
          "text": " (you can just send email to gor-users@googlegroups.com). If you have a private question feel free to send email to support@gortool.com."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Contributing"
        }
      ]
    },
    {
      "type": "ordered_list",
      "attrs": {
        "order": 1
      },
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Fork it"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Create your feature branch (git checkout -b my-new-feature)"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Commit your changes (git commit -am 'Added some feature')"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Push to the branch (git push origin my-new-feature)"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Create new Pull Request"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Companies using Gor"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://www.gov.uk",
                        "title": null
                      }
                    }
                  ],
                  "text": "GOV.UK"
                },
                {
                  "type": "text",
                  "text": " - UK Government Digital Service"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://theguardian.com",
                        "title": null
                      }
                    }
                  ],
                  "text": "theguardian.com"
                },
                {
                  "type": "text",
                  "text": " - Most popular online newspaper in the UK"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://www.tomtom.com/",
                        "title": null
                      }
                    }
                  ],
                  "text": "TomTom"
                },
                {
                  "type": "text",
                  "text": " - Global leader in navigation, traffic and map products, GPS Sport Watches and fleet management solutions."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://www.3scale.net/",
                        "title": null
                      }
                    }
                  ],
                  "text": "3SCALE"
                },
                {
                  "type": "text",
                  "text": " - API infrastructure to manage your APIs for internal or external users"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://www.opinionlab.com",
                        "title": null
                      }
                    }
                  ],
                  "text": "Optionlab"
                },
                {
                  "type": "text",
                  "text": " - Optimize customer experience and drive engagement across multiple channels"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://tubemogul.com",
                        "title": null
                      }
                    }
                  ],
                  "text": "TubeMogul"
                },
                {
                  "type": "text",
                  "text": " - Software for Brand Advertising"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://www.videologygroup.com/",
                        "title": null
                      }
                    }
                  ],
                  "text": "Videology"
                },
                {
                  "type": "text",
                  "text": " - Video advertising platform"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://foreksmobile.com/",
                        "title": null
                      }
                    }
                  ],
                  "text": "ForeksMobile"
                },
                {
                  "type": "text",
                  "text": " - One of the leading financial application development company in Turkey"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "http://granify.com",
                        "title": null
                      }
                    }
                  ],
                  "text": "Granify"
                },
                {
                  "type": "text",
                  "text": " - AI backed SaaS solution that enables online retailers to maximise their sales"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "And many more!"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If you are using Gor, we are happy to add you to the list and share your story, just write to: hello@goreplay.org"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Author"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Leonid Bugaev, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://twitter.com/buger",
                "title": null
              }
            }
          ],
          "text": "@buger"
        },
        {
          "type": "text",
          "text": ", "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://leonsbox.com",
                "title": null
              }
            }
          ],
          "text": "https://leonsbox.com"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://raw.githubusercontent.com/DiceBear/avatars/master/banner.svg?sanitize=true",
            "alt": "DiceBear Avatars",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Avatars is an avatar placeholder library for designers and developers. You can choose between simple identicons and lovely designed characters. And best of all: We provide a simple and free HTTP API that you can use right away!"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://avatars.dicebear.com",
                "title": null
              }
            }
          ],
          "text": "https://avatars.dicebear.com"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Packages"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The Avatars repo is managed as a monorepo that is composed of many npm packages."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Core Packages"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Package Version "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Original Sprite Collections"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Package Version "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-male-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-male-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-male-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-male-sprites",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-female-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-female-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-female-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-female-sprites",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-identicon-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-identicon-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-identicon-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-identicon-sprites",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-initials-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-initials-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-initials-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-identicon-sprites",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-bottts-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-bottts-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-bottts-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-bottts-sprites",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Wrapper Sprite Collections"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Package Version "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-avataaars-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-avataaars-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-avataaars-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-avataaars-sprites",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-gridy-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-gridy-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-gridy-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-gridy-sprites",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/avatars-jdenticon-sprites",
                "title": null
              }
            }
          ],
          "text": "@dicebear/avatars-jdenticon-sprites"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/@dicebear/avatars-jdenticon-sprites.svg?style=flat-square",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/@dicebear/avatars-jdenticon-sprites",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "React component for Avataaars"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The core React component for "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://getavataaars.com/",
                "title": null
              }
            }
          ],
          "text": "Avataaars Generator"
        },
        {
          "type": "text",
          "text": " developed by "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://twitter.com/fangpenlin",
                "title": null
              }
            }
          ],
          "text": "Fang-Pen Lin"
        },
        {
          "type": "text",
          "text": ", based on the Sketch library "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://avataaars.com/",
                "title": null
              }
            }
          ],
          "text": "Avataaars"
        },
        {
          "type": "text",
          "text": " designed by "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://twitter.com/pablostanley",
                "title": null
              }
            }
          ],
          "text": "Pablo Stanley"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://parsedown.org/avataaars-example.png?raw=true",
            "alt": "avataaars-example.png?raw=true",
            "title": null
          }
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Features"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SVG based"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Light weight"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Scalable"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Easy to use"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Easy to integrate with custom editor"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Comes with "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://getavataaars.com/",
                        "title": null
                      }
                    }
                  ],
                  "text": "official editor"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Usage"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "First, you need to install the avataaars component package, here you run"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "yarn add avataaars"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "or"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npm install avataaars --save"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "if you are using npm. Then, in your React app, import the Avataaar component and put it where you like it to be, for example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "import * as React from 'react'\nimport Avatar from 'avataaars'\n\nexport default class MyComponent extends React.Component {\n  render () {\n    return \n      <div>\n        Your avatar:\n        <Avatar\n          style={{width: '100px', height: '100px'}}\n          avatarStyle='Circle'\n          topType='LongHairMiaWallace'\n          accessoriesType='Prescription02'\n          hairColor='BrownDark'\n          facialHairType='Blank'\n          clotheType='Hoodie'\n          clotheColor='PastelBlue'\n          eyeType='Happy'\n          eyebrowType='Default'\n          mouthType='Smile'\n          skinColor='Light'\n        />\n      </div>\n  }\n}"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To showcase individual pieces of the avatar you can use the Piece component, for example:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "import * as React from 'react'\nimport {Piece} from 'avataaars';\n\nexport default class MyComponent extends React.Component {\n  render () {\n    return \n      <div>\n        <Piece pieceType=\"mouth\" pieceSize=\"100\" mouthType=\"Eating\"/>\n        <Piece pieceType=\"eyes\" pieceSize=\"100\" eyeType=\"Dizzy\"/>\n        <Piece pieceType=\"eyebrows\" pieceSize=\"100\" eyebrowType=\"RaisedExcited\"/>\n        <Piece pieceType=\"accessories\" pieceSize=\"100\" accessoriesType=\"Round\"/>\n        <Piece pieceType=\"top\" pieceSize=\"100\" topType=\"LongHairFro\" hairColor=\"Red\"/>\n        <Piece pieceType=\"facialHair\" pieceSize=\"100\" facialHairType=\"BeardMajestic\"/>\n        <Piece pieceType=\"clothe\" pieceSize=\"100\" clotheType=\"Hoodie\" clotheColor=\"Red\"/>\n        <Piece pieceType=\"graphics\" pieceSize=\"100\" graphicType=\"Skull\" />\n        <Piece pieceType=\"skin\" pieceSize=\"100\" skinColor=\"Brown\" />\n      </div>\n  }\n}"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To explore avatar options and generate the React code, please use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://getavataaars.com/",
                "title": null
              }
            }
          ],
          "text": "Avataaars Generator"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Collect options"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To build your own avatar editor, you may want to use lower level "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Avatar"
        },
        {
          "type": "text",
          "text": " component along with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "OptionContext"
        },
        {
          "type": "text",
          "text": ". For more details usage, please reference to source code of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/fangpenlin/avataaars-geneator",
                "title": null
              }
            }
          ],
          "text": "avataaars-generator"
        },
        {
          "type": "text",
          "text": ", see how it uses "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "OptionContext"
        },
        {
          "type": "text",
          "text": " to collection available options."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://raw.githubusercontent.com/ctz/rustls/master/admin/rustls-logo-web.png",
            "alt": "Logo",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Rustls is a modern TLS library written in Rust. It's pronounced 'rustles'. It uses "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/briansmith/ring",
                "title": null
              }
            },
            {
              "type": "em"
            }
          ],
          "text": "ring"
        },
        {
          "type": "text",
          "text": " for cryptography and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/briansmith/webpki",
                "title": null
              }
            }
          ],
          "text": "libwebpki"
        },
        {
          "type": "text",
          "text": " for certificate verification."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Status"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Rustls is ready for use. There are no major breaking interface changes expected. "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/ctz/rustls/projects/1",
                "title": null
              }
            }
          ],
          "text": "Here's what I'm working on now"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If you'd like to help out, please see "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/CONTRIBUTING.md",
                "title": null
              }
            }
          ],
          "text": "CONTRIBUTING.md"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://travis-ci.org/ctz/rustls.svg?branch=master",
            "alt": "Build Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://travis-ci.org/ctz/rustls",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://dev.azure.com/ctz99/ctz/_apis/build/status/ctz.rustls?branchName=master",
            "alt": "Build Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://dev.azure.com/ctz99/ctz/_build/latest?definitionId=3&branchName=master",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://coveralls.io/repos/github/ctz/rustls/badge.svg?branch=master",
            "alt": "Coverage Status (coveralls)",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://coveralls.io/github/ctz/rustls?branch=master",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://codecov.io/gh/ctz/rustls/branch/master/graph/badge.svg",
            "alt": "Coverage Status (codecov.io)",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://codecov.io/gh/ctz/rustls/",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://docs.rs/rustls/badge.svg",
            "alt": "Documentation",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://docs.rs/rustls/",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Release history:"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Next release (0.15.3):"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Optimisation of read path for polled non-blocking IO."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Correct an omission in TLS1.3 middlebox compatibility mode, causing handshake failures with servers behind buggy middleboxes."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "0.15.2 (2019-04-02):"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Moved example code around for benefit of Fuchsia."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Example code fixes for Windows -- Windows is now a tested platform."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "QUIC-specific bug fixes."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Update dependencies."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "0.15.1 (2019-01-29):"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Fix incorrect offering of SHA1."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "0.15.0 (2019-01-20):"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Update dependencies."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "em"
                            }
                          ],
                          "text": "Breaking API change"
                        },
                        {
                          "type": "text",
                          "text": ": ALPN protocols are now encoded as a "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Vec<u8>"
                        },
                        {
                          "type": "text",
                          "text": ", not a "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "String"
                        },
                        {
                          "type": "text",
                          "text": ". This alters the type of:"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "ClientConfig::alpn_protocols"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "ClientConfig::set_protocols"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "ServerConfig::alpn_protocols"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "ServerConfig::set_protocols"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Session::get_alpn_protocol"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Emit a warning when receiving an invalid SNI extension, such as one including an IP address."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Extended QUIC support for later QUIC drafts."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Correct bug where we'd send more than one fatal alert for handshake failure cases."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Discontinue support for SHA1 signatures."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Move to Rust 2018 edition."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "0.14.0 (2018-09-30):"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Introduce client-side support for 0-RTT data in TLS1.3."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Fix a bug in rustls::Stream for non-blocking transports."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Move TLS1.3 support from draft 23 to final RFC8446 version."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Don't offer (eg) TLS1.3 if no TLS1.3 suites are configured."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Support stateful resumption in TLS1.3. Stateless resumption was previously supported, but is not the default configuration."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "em"
                            }
                          ],
                          "text": "Breaking API change"
                        },
                        {
                          "type": "text",
                          "text": ": "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "generate()"
                        },
                        {
                          "type": "text",
                          "text": " removed from "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "StoresServerSessions"
                        },
                        {
                          "type": "text",
                          "text": " trait."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "em"
                            }
                          ],
                          "text": "Breaking API change"
                        },
                        {
                          "type": "text",
                          "text": ": "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "take()"
                        },
                        {
                          "type": "text",
                          "text": " added to "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "StoresServerSessions"
                        },
                        {
                          "type": "text",
                          "text": " trait."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "0.13.1 (2018-08-17):"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Fix a bug in rustls::Stream for non-blocking transports (backport)."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "0.13.0 (2018-07-15):"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Move TLS1.3 support from draft 22 to 23."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Add support for "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "SSLKEYLOGFILE"
                        },
                        {
                          "type": "text",
                          "text": "; not enabled by default."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Add support for basic usage in QUIC."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "ServerConfig::set_single_cert"
                        },
                        {
                          "type": "text",
                          "text": " and company now report errors."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Add support for vectored IO: "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "writev_tls"
                        },
                        {
                          "type": "text",
                          "text": " can now be used to optimise system call usage."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Support ECDSA signing for server and client authentication."
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "text": "Add type like "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "rustls::Stream"
                        },
                        {
                          "type": "text",
                          "text": " which owns its underlying TCP stream and rustls session."
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "See "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/OLDCHANGES.md",
                "title": null
              }
            }
          ],
          "text": "OLDCHANGES.md"
        },
        {
          "type": "text",
          "text": " for further change history."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Documentation"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Lives here: "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://docs.rs/rustls/",
                "title": null
              }
            }
          ],
          "text": "https://docs.rs/rustls/"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Approach"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Rustls is a TLS library that aims to provide a good level of cryptographic security, requires no configuration to achieve that security, and provides no unsafe features or obsolete cryptography."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Current features"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TLS1.2 and TLS1.3."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ECDSA or RSA server authentication by clients."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ECDSA or RSA server authentication by servers."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Forward secrecy using ECDHE; with curve25519, nistp256 or nistp384 curves."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "AES128-GCM and AES256-GCM bulk encryption, with safe nonces."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Chacha20Poly1305 bulk encryption."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ALPN support."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SNI support."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Tunable MTU to make TLS messages match size of underlying transport."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Optional use of vectored IO to minimise system calls."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TLS1.2 session resumption."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TLS1.2 resumption via tickets (RFC5077)."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TLS1.3 resumption via tickets or session storage."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "TLS1.3 0-RTT data for clients."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Client authentication by clients."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Client authentication by servers."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Extended master secret support (RFC7627)."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Exporters (RFC5705)."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "OCSP stapling by servers."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SCT stapling by servers."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SCT verification by clients."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Possible future features"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "PSK support."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "OCSP verification by clients."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Certificate pinning."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Non-features"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The following things are broken, obsolete, badly designed, underspecified, dangerous and/or insane. Rustls does not support:"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "SSL1, SSL2, SSL3, TLS1 or TLS1.1."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "RC4."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "DES or triple DES."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "EXPORT ciphersuites."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "MAC-then-encrypt ciphersuites."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Ciphersuites without forward secrecy."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Renegotiation."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Kerberos."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Compression."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Discrete-log Diffie-Hellman."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Automatic protocol version downgrade."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "AES-GCM with unsafe nonces."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "There are plenty of other libraries that provide these features should you need them."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Example code"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "There are two example programs which use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/carllerche/mio",
                "title": null
              }
            }
          ],
          "text": "mio"
        },
        {
          "type": "text",
          "text": " to do asynchronous IO."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Client example program"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The client example program is named "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "tlsclient"
        },
        {
          "type": "text",
          "text": ". The interface looks like:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "Connects to the TLS server at hostname:PORT.  The default PORT\nis 443.  By default, this reads a request from stdin (to EOF)\nbefore making the connection.  --http replaces this with a\nbasic HTTP GET request for /.\n\nIf --cafile is not supplied, a built-in set of CA certificates\nare used from the webpki-roots crate.\n\nUsage:\n  tlsclient [options] [--suite SUITE ...] [--proto PROTO ...] <hostname>\n  tlsclient (--version | -v)\n  tlsclient (--help | -h)\n\nOptions:\n    -p, --port PORT     Connect to PORT [default: 443].\n    --http              Send a basic HTTP GET request for /.\n    --cafile CAFILE     Read root certificates from CAFILE.\n    --auth-key KEY      Read client authentication key from KEY.\n    --auth-certs CERTS  Read client authentication certificates from CERTS.\n                        CERTS must match up with KEY.\n    --protover VERSION  Disable default TLS version list, and use\n                        VERSION instead.  May be used multiple times.\n    --suite SUITE       Disable default cipher suite list, and use\n                        SUITE instead.  May be used multiple times.\n    --proto PROTOCOL    Send ALPN extension containing PROTOCOL.\n                        May be used multiple times to offer several protocols.\n    --cache CACHE       Save session cache to file CACHE.\n    --no-tickets        Disable session ticket support.\n    --no-sni            Disable server name indication support.\n    --insecure          Disable certificate verification.\n    --verbose           Emit log output.\n    --mtu MTU           Limit outgoing messages to MTU bytes.\n    --version, -v       Show tool version.\n    --help, -h          Show this screen."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Some sample runs:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "$ ./tlsclient --http mozilla-modern.badssl.com\nHTTP/1.1 200 OK\nServer: nginx/1.6.2 (Ubuntu)\nDate: Wed, 01 Jun 2016 18:44:00 GMT\nContent-Type: text/html\nContent-Length: 644\n(...)"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "or"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "$ ./target/debug/examples/tlsclient --http expired.badssl.com\nTLS error: WebPKIError(CertExpired)\nConnection closed"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Server example program"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The server example program is named "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "tlsserver"
        },
        {
          "type": "text",
          "text": ". The interface looks like:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "Runs a TLS server on :PORT.  The default PORT is 443.\n\n`echo' mode means the server echoes received data on each connection.\n\n`http' mode means the server blindly sends a HTTP response on each\nconnection.\n\n`forward' means the server forwards plaintext to a connection made to\nlocalhost:fport.\n\n`--certs' names the full certificate chain, `--key' provides the\nRSA private key.\n\nUsage:\n  tlsserver --certs CERTFILE --key KEYFILE [--suite SUITE ...] [--proto PROTO ...] [options] echo\n  tlsserver --certs CERTFILE --key KEYFILE [--suite SUITE ...] [--proto PROTO ...] [options] http\n  tlsserver --certs CERTFILE --key KEYFILE [--suite SUITE ...] [--proto PROTO ...] [options] forward <fport>\n  tlsserver (--version | -v)\n  tlsserver (--help | -h)\n\nOptions:\n    -p, --port PORT     Listen on PORT [default: 443].\n    --certs CERTFILE    Read server certificates from CERTFILE.\n                        This should contain PEM-format certificates\n                        in the right order (the first certificate should\n                        certify KEYFILE, the last should be a root CA).\n    --key KEYFILE       Read private key from KEYFILE.  This should be a RSA\n                        private key or PKCS8-encoded private key, in PEM format.\n    --ocsp OCSPFILE     Read DER-encoded OCSP response from OCSPFILE and staple\n                        to certificate.  Optional.\n    --auth CERTFILE     Enable client authentication, and accept certificates\n                        signed by those roots provided in CERTFILE.\n    --require-auth      Send a fatal alert if the client does not complete client\n                        authentication.\n    --resumption        Support session resumption.\n    --tickets           Support tickets.\n    --protover VERSION  Disable default TLS version list, and use\n                        VERSION instead.  May be used multiple times.\n    --suite SUITE       Disable default cipher suite list, and use\n                        SUITE instead.  May be used multiple times.\n    --proto PROTOCOL    Negotiate PROTOCOL using ALPN.\n                        May be used multiple times.\n    --verbose           Emit log output.\n    --version, -v       Show tool version.\n    --help, -h          Show this screen."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Here's a sample run; we start a TLS echo server, then connect to it with openssl and tlsclient:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "$ ./tlsserver --certs test-ca/rsa/end.fullchain --key test-ca/rsa/end.rsa -p 8443 echo &\n$ echo hello world | openssl s_client -ign_eof -quiet -connect localhost:8443\ndepth=2 CN = ponytown RSA CA\nverify error:num=19:self signed certificate in certificate chain\nhello world\n^C\n$ echo hello world | ./tlsclient --cafile test-ca/rsa/ca.cert -p 8443 localhost\nhello world\n^C"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "License"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Rustls is distributed under the following three licenses:"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "Apache License version 2.0."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "MIT license."
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "ISC license."
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "These are included as LICENSE-APACHE, LICENSE-MIT and LICENSE-ISC respectively. You may use this software under the terms of any of these licenses, at your option."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "MoveTo "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://badge.fury.io/js/moveto.svg",
            "alt": "npm version",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://badge.fury.io/js/moveto",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://badge.fury.io/bo/moveTo.svg",
            "alt": "Bower version",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://badge.fury.io/bo/moveTo",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/cdnjs/v/moveTo.svg",
            "alt": "CDNJS version",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://cdnjs.com/libraries/moveTo",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://travis-ci.org/hsnaydd/moveTo.svg?branch=master",
            "alt": "Build Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://travis-ci.org/hsnaydd/moveTo.js",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "A lightweight (only 1kb gzipped) scroll animation javascript library without any dependency."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://hsnaydd.github.io/moveTo/demo/",
                "title": null
              }
            }
          ],
          "text": "Demo"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Installation"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Using npm"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "$ npm install moveto --save"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Using Yarn"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "$ yarn add moveto"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Using Bower"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "$ bower install moveTo --save"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Usage"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const moveTo = new MoveTo();\n\nconst target = document.getElementById('target');\n\nmoveTo.move(target);\n\n// Or register a trigger\n\nconst trigger = document.getElementsByClassName('js-trigger')[0];\n\nmoveTo.registerTrigger(trigger);\n"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Trigger HTML markup"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You can pass all options as data attributes with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "mt"
        },
        {
          "type": "text",
          "text": " prefix. Option name should be written in kebab case format, for example:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "<a href=\"#target\" class=\"js-trigger\" data-mt-duration=\"300\">Trigger</a>\n\n<!-- Or -->\n\n<button type=\"button\" class=\"js-trigger\" data-target=\"#target\" data-mt-duration=\"300\">Trigger</button>"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Options"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The default options are as follows:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "new MoveTo({\n  tolerance: 0,\n  duration: 800,\n  easing: 'easeOutQuart',\n  container: window\n})"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Option Default Desctiption tolerance 0 The tolerance of the target to be scrolled, can be negative or positive duration 800 Duration of scrolling, in milliseconds easing easeOutQuart Ease function name container window The container been computed and scrolled callback noop The function to be run after scrolling complete. Target passes as the first argument"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "API"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "move(target, options)"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Start scroll animation from current position to the anchor point"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "target"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Type: HTMLElement|Number"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Target element/position to be scrolled. Target position is the scrolling distance. It must be negative if the upward movement is desired."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "options"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Type: Object"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Pass custom options."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "registerTrigger(trigger, callback)"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "trigger"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Type: HTMLElement"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This is the trigger element for starting to scroll when on click."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "callback"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This is the callback function to be run after the scroll complete. This will overwrite the callback option."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "addEaseFunction(name, fn)"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Adds custom ease function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "name"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Type: String"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Ease function name."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "fn"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Type: Function"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Ease function. See "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "http://gizma.com/easing/",
                "title": null
              }
            }
          ],
          "text": "Easing Equations"
        },
        {
          "type": "text",
          "text": " for more ease function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Examples"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": " Pass ease function(s) when creating instance ```js document.addEventListener('DOMContentLoaded', function () { const easeFunctions = { easeInQuad: function (t, b, c, d) { t /= d; return c * t * t + b; }, easeOutQuad: function (t, b, c, d) { t /= d; return -c * t* (t - 2) + b; } } const moveTo = new MoveTo({ duration: 1000, easing: 'easeInQuad' }, easeFunctions); const trigger = document.getElementsByClassName('js-trigger')[0]; moveTo.registerTrigger(trigger); }); ``` Working with callback function ```js document.addEventListener('DOMContentLoaded', function () { const moveTo = new MoveTo({ duration: 1000, callback: function (target) { // This will run if there is no overwrite } }); const trigger = document.getElementsByClassName('js-trigger')[0]; moveTo.registerTrigger(trigger, function (target) { // Overwrites global callback }); // Or moveTo.move(1200, { duration: 500, callback: function () { // Overwrites global callback } }); }); ``` Unregister a trigger ```js document.addEventListener('DOMContentLoaded', function () { const moveTo = new MoveTo(); const trigger = document.getElementsByClassName('js-trigger')[0]; // Register a trigger const unregister = moveTo.registerTrigger(trigger, { duration: 500 }); // Unregister a trigger unregister(); }); ``` Back to top ```js document.addEventListener('DOMContentLoaded', function () { const moveTo = new MoveTo(); const triggers = document.getElementsByClassName('js-back-to-top'); for (var i = 0; triggers.length < i; i++) { moveTo.registerTrigger(triggers[i]); } }); ``` ```html "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#",
                "title": null
              }
            }
          ],
          "text": "Back to top!"
        },
        {
          "type": "text",
          "text": " ```"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Development setup"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "# To install dev dependencies run:\n\n$ yarn\n\n# Or so if using npm:\n\n$ npm install\n\n# To start the development server run:\n\n$ yarn start\n\n# Or so if using npm:\n\n$ npm run start\n\n# To lint your code run:\n\n$ yarn lint\n\n# Or so if using npm:\n\n$ npm run lint\n\n# To make a full new build run:\n\n$ yarn build\n\n# Or so if using npm:\n\n$ npm run build\n\n# To run tests:\n\n$ yarn test\n\n# Or so if using npm:\n\n$ npm test"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Browser support"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "It should work in the current stable releases of Chrome, Firefox, Safari as well as IE10 and up. To add support for older browsers, consider including polyfills/shims for the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame",
                "title": null
              }
            }
          ],
          "text": "requestAnimationFrame"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "License"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Copyright (c) 2017 Hasan Aydoğdu. See the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/LICENSE",
                "title": null
              }
            }
          ],
          "text": "LICENSE"
        },
        {
          "type": "text",
          "text": " file for license rights and limitations (MIT)."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "webhint"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://dev.azure.com/webhint/webhint/_apis/build/status/webhintio.hint?branchName=master",
            "alt": "Build Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://dev.azure.com/webhint/webhint/_build/latest?definitionId=3&branchName=master",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://badges.gitter.im/Join%20Chat.svg",
            "alt": "Gitter",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://gitter.im/webhintio/Lobby",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://app.fossa.io/api/projects/git%2Bgithub.com%2Fwebhintio%2Fhint.svg?type=shield",
            "alt": "FOSSA Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://app.fossa.io/projects/git%2Bgithub.com%2Fwebhintio%2Fhint?ref=badge_shield",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Quick start user guide"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Once you have "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://nodejs.org/en/download/current/",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "Node.js"
        },
        {
          "type": "text",
          "text": " v8.x on your machine, you can use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/zkat/npx",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "npx"
        },
        {
          "type": "text",
          "text": " or install "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "hint"
        },
        {
          "type": "text",
          "text": " globally to use it."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Using "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "npx"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Run the following command:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npx hint https://example.com"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This will analyze "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "https://example.com"
        },
        {
          "type": "text",
          "text": " using the default configuration."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Installing "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "webhint"
        },
        {
          "type": "text",
          "text": " globally"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npm install -g --engine-strict hint"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Create a "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".hintrc"
        },
        {
          "type": "text",
          "text": " file by running this command and following the instructions:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npm create hintrc"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Choose configurations:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "❯ predefined\n  custom"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Choose the configuration you want to extend from:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "❯ development\n  web-recommended\n  progressive-web-apps"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Scan a website:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "hint https://example.com"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To use a different formatter than the one specified in your "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".hintrc"
        },
        {
          "type": "text",
          "text": " file you can do the following:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "hint https://example.com --formatters excel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To use a different hint than the one specified in your "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".hintrc"
        },
        {
          "type": "text",
          "text": " file:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "hint https://example.com --hints html-checker"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Multiple hints can be specified as a comma separated string:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "hint https://example.com --hints axe,html-checker"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "For more in depth information on how to get started, configurations, and more, see the online "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://webhint.io/docs/user-guide/",
                "title": null
              }
            }
          ],
          "text": "user guide"
        },
        {
          "type": "text",
          "text": ", or the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/hint/docs/user-guide/index.md",
                "title": null
              }
            }
          ],
          "text": "local version"
        },
        {
          "type": "text",
          "text": " for the most recent (and unstable) content."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Contributing to webhint"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To know more about the internals of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "webhint"
        },
        {
          "type": "text",
          "text": ", the structure of the project, how to create new hints, collectors, formatters, etc, take a look at the online "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://webhint.io/docs/contributor-guide/",
                "title": null
              }
            }
          ],
          "text": "contributor guide"
        },
        {
          "type": "text",
          "text": " (or the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/packages/hint/docs/contributor-guide/index.md",
                "title": null
              }
            }
          ],
          "text": "local version"
        },
        {
          "type": "text",
          "text": ")."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Code of Conduct"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "This project adheres to the JS Foundation’s "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://js.foundation/community/code-of-conduct",
                "title": null
              }
            }
          ],
          "text": "code of conduct"
        },
        {
          "type": "text",
          "text": ". By participating in this project you agree to abide by its terms."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "License"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The code is available under the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/LICENSE.txt",
                "title": null
              }
            }
          ],
          "text": "Apache 2.0 license"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://app.fossa.io/api/projects/git%2Bgithub.com%2Fwebhintio%2Fhint.svg?type=large",
            "alt": "FOSSA Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://app.fossa.io/projects/git%2Bgithub.com%2Fwebhintio%2Fhint?ref=badge_large",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "deepmerge"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Merges the enumerable properties of two or more objects deeply."
        }
      ]
    },
    {
      "type": "blockquote",
      "content": [
        {
          "type": "paragraph",
          "content": [
            {
              "type": "text",
              "text": "UMD bundle is 646B minified+gzipped"
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Getting Started"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Example Usage"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const x = {\n    foo: { bar: 3 },\n    array: [{\n        does: 'work',\n        too: [ 1, 2, 3 ]\n    }]\n}\n\nconst y = {\n    foo: { baz: 4 },\n    quux: 5,\n    array: [{\n        does: 'work',\n        too: [ 4, 5, 6 ]\n    }, {\n        really: 'yes'\n    }]\n}\n\nconst output = {\n    foo: {\n        bar: 3,\n        baz: 4\n    },\n    array: [{\n        does: 'work',\n        too: [ 1, 2, 3 ]\n    }, {\n        does: 'work',\n        too: [ 4, 5, 6 ]\n    }, {\n        really: 'yes'\n    }],\n    quux: 5\n}\n\nmerge(x, y) // => output"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Installation"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "With "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "http://npmjs.org",
                "title": null
              }
            }
          ],
          "text": "npm"
        },
        {
          "type": "text",
          "text": " do:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npm install deepmerge"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "deepmerge can be used directly in the browser without the use of package managers/bundlers as well: "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://unpkg.com/deepmerge/dist/umd.js",
                "title": null
              }
            }
          ],
          "text": "UMD version from unpkg.com"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Include"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "deepmerge exposes a CommonJS entry point:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const merge = require('deepmerge')"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The ESM entry point was dropped due to a "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/webpack/webpack/issues/6584",
                "title": null
              }
            }
          ],
          "text": "Webpack bug"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "API"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "merge(x, y, [options])"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Merge two objects "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "x"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "y"
        },
        {
          "type": "text",
          "text": " deeply, returning a new merged object with the elements from both "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "x"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "y"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If an element at the same key is present for both "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "x"
        },
        {
          "type": "text",
          "text": " and "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "y"
        },
        {
          "type": "text",
          "text": ", the value from "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "y"
        },
        {
          "type": "text",
          "text": " will appear in the result."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Merging creates a new object, so that neither "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "x"
        },
        {
          "type": "text",
          "text": " or "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "y"
        },
        {
          "type": "text",
          "text": " is modified."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Note:"
        },
        {
          "type": "text",
          "text": " By default, arrays are merged by concatenating them."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "merge.all(arrayOfObjects, [options])"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Merges any number of objects into a single result object."
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const foobar = { foo: { bar: 3 } }\nconst foobaz = { foo: { baz: 4 } }\nconst bar = { bar: 'yay!' }\n\nmerge.all([ foobar, foobaz, bar ]) // => { foo: { bar: 3, baz: 4 }, bar: 'yay!' }"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Options"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "arrayMerge"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "There are multiple ways to merge two arrays, below are a few examples but you can also create your own custom function."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "Overwrite Array"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Overwrites the existing array values completely rather than concatenating them"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const overwriteMerge = (destinationArray, sourceArray, options) => sourceArray\n\nmerge(\n    [1, 2, 3],\n    [3, 2, 1],\n    { arrayMerge: overwriteMerge }\n) // => [3, 2, 1]"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "Combine Array"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Combine arrays, such as overwriting existing defaults while also adding/keeping values that are different names"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To use the legacy (pre-version-2.0.0) array merging algorithm, use the following:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const emptyTarget = value => Array.isArray(value) ? [] : {}\nconst clone = (value, options) => merge(emptyTarget(value), value, options)\n\nconst combineMerge = (target, source, options) => {\n    const destination = target.slice()\n\n    source.forEach((item, index) => {\n        if (typeof destination[index] === 'undefined') {\n            const cloneRequested = options.clone !== false\n            const shouldClone = cloneRequested && options.isMergeableObject(item)\n            destination[index] = shouldClone ? clone(item, options) : item\n        } else if (options.isMergeableObject(item)) {\n            destination[index] = merge(target[index], item, options)\n        } else if (target.indexOf(item) === -1) {\n            destination.push(item)\n        }\n    })\n    return destination\n}\n\nmerge(\n    [{ a: true }],\n    [{ b: true }, 'ah yup'],\n    { arrayMerge: combineMerge }\n) // => [{ a: true, b: true }, 'ah yup']"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "isMergeableObject"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "By default, deepmerge clones every property from almost every kind of object."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You may not want this, if your objects are of special types, and you want to copy the whole object instead of just copying its properties."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "You can accomplish this by passing in a function for the "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "isMergeableObject"
        },
        {
          "type": "text",
          "text": " option."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If you only want to clone properties of plain objects, and ignore all \"special\" kinds of instantiated objects, you probably want to drop in "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/jonschlinkert/is-plain-object",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "is-plain-object"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const isPlainObject = require('is-plain-object')\n\nfunction SuperSpecial() {\n    this.special = 'oh yeah man totally'\n}\n\nconst instantiatedSpecialObject = new SuperSpecial()\n\nconst target = {\n    someProperty: {\n        cool: 'oh for sure'\n    }\n}\n\nconst source = {\n    someProperty: instantiatedSpecialObject\n}\n\nconst defaultOutput = merge(target, source)\n\ndefaultOutput.someProperty.cool // => 'oh for sure'\ndefaultOutput.someProperty.special // => 'oh yeah man totally'\ndefaultOutput.someProperty instanceof SuperSpecial // => false\n\nconst customMergeOutput = merge(target, source, {\n    isMergeableObject: isPlainObject\n})\n\ncustomMergeOutput.someProperty.cool // => undefined\ncustomMergeOutput.someProperty.special // => 'oh yeah man totally'\ncustomMergeOutput.someProperty instanceof SuperSpecial // => true"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "customMerge"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Specifies a function which can be used to override the default merge behavior for a property, based on the property name."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "The "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "customMerge"
        },
        {
          "type": "text",
          "text": " function will be passed the key for each property, and should return the function which should be used to merge the values for that property."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "It may also return undefined, in which case the default merge behaviour will be used."
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const alex = {\n    name: {\n        first: 'Alex',\n        last: 'Alexson'\n    },\n    pets: ['Cat', 'Parrot']\n}\n\nconst tony = {\n    name: {\n        first: 'Tony',\n        last: 'Tonison'\n    },\n    pets: ['Dog']\n}\n\nconst mergeNames = (nameA, nameB) => `${nameA.first} and ${nameB.first}`\n\nconst options = {\n    customMerge: (key) => {\n        if (key === 'name') {\n            return mergeNames\n        }\n    }\n}\n\nconst result = merge(alex, tony, options)\n\nresult.name // => 'Alex and Tony'\nresult.pets // => ['Cat', 'Parrot', 'Dog']"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "clone"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "em"
            }
          ],
          "text": "Deprecated."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Defaults to "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "true"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "If "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "clone"
        },
        {
          "type": "text",
          "text": " is "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "false"
        },
        {
          "type": "text",
          "text": " then child objects will be copied directly instead of being cloned. This was the default behavior before version 2.x."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "Testing"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "With "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "http://npmjs.org",
                "title": null
              }
            }
          ],
          "text": "npm"
        },
        {
          "type": "text",
          "text": " do:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npm test"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "License"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "MIT"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 1
      },
      "content": [
        {
          "type": "text",
          "text": "websocket-as-promised"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://user-images.githubusercontent.com/1473072/32486445-b2443538-c3b7-11e7-8e9f-94c95efad760.png",
            "alt": "websocket-as-promised logo",
            "title": null
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "image",
          "attrs": {
            "src": "https://travis-ci.org/vitalets/websocket-as-promised.svg?branch=master",
            "alt": "Build Status",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://travis-ci.org/vitalets/websocket-as-promised",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://snyk.io/test/github/vitalets/websocket-as-promised/badge.svg?targetFile=package.json",
            "alt": "Known Vulnerabilities",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://snyk.io/test/github/vitalets/websocket-as-promised?targetFile=package.json",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/v/websocket-as-promised.svg",
            "alt": "npm",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/websocket-as-promised",
                "title": null
              }
            }
          ]
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "image",
          "attrs": {
            "src": "https://img.shields.io/npm/l/websocket-as-promised.svg",
            "alt": "license",
            "title": null
          },
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/websocket-as-promised",
                "title": null
              }
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "A "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API",
                "title": null
              }
            }
          ],
          "text": "WebSocket"
        },
        {
          "type": "text",
          "text": " client library with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Promise",
                "title": null
              }
            }
          ],
          "text": "Promise"
        },
        {
          "type": "text",
          "text": "-based API for browser and Node.js."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "import WebSocketAsPromised from 'websocket-as-promised';\n\nconst wsp = new WebSocketAsPromised('ws://example.com');\nawait wsp.open();\nwsp.send('message');\nawait wsp.close();"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Contents"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#requirements",
                        "title": null
                      }
                    }
                  ],
                  "text": "Requirements"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#installation",
                        "title": null
                      }
                    }
                  ],
                  "text": "Installation"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#usage-in-browser",
                        "title": null
                      }
                    }
                  ],
                  "text": "Usage"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#usage-in-browser",
                                "title": null
                              }
                            }
                          ],
                          "text": "Browser"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#usage-in-nodejs",
                                "title": null
                              }
                            }
                          ],
                          "text": "Node.js"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#sending-raw-data",
                        "title": null
                      }
                    }
                  ],
                  "text": "Sending data"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#sending-raw-data",
                                "title": null
                              }
                            }
                          ],
                          "text": "raw"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#sending-json",
                                "title": null
                              }
                            }
                          ],
                          "text": "JSON"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#sending-binary",
                                "title": null
                              }
                            }
                          ],
                          "text": "binary"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#sending-requests",
                                "title": null
                              }
                            }
                          ],
                          "text": "request / response"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#api",
                        "title": null
                      }
                    }
                  ],
                  "text": "API"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#changelog",
                        "title": null
                      }
                    }
                  ],
                  "text": "Changelog"
                }
              ]
            }
          ]
        },
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#license",
                        "title": null
                      }
                    }
                  ],
                  "text": "License"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Requirements"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "text": "global "
                },
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "code"
                    }
                  ],
                  "text": "Promise"
                },
                {
                  "type": "text",
                  "text": " constructor"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Installation"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "npm i websocket-as-promised --save"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Usage in browser"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "import WebSocketAsPromised from 'websocket-as-promised';\n\nconst wsp = new WebSocketAsPromised('ws://example.com');\n\nwsp.open()\n  .then(() => wsp.send('message'))\n  .then(() => wsp.close())\n  .catch(e => console.error(e));"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Or with ES7 "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function",
                "title": null
              }
            }
          ],
          "text": "async / await"
        },
        {
          "type": "text",
          "text": ":"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "import WebSocketAsPromised from 'websocket-as-promised';\n\nconst wsp = new WebSocketAsPromised('ws://example.com');\n\n(async () => {\n  try {\n    await wsp.open();\n    wsp.send('message');\n  } catch(e) {\n    console.error(e);\n  } finally {\n    await wsp.close();\n  }\n})();"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Usage in Node.js"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "As there is no built-in WebSocket client in Node.js, you should use a third-party WebSocket module."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Usage with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/websocket",
                "title": null
              }
            }
          ],
          "text": "websocket"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Here you should use W3C compatible client - "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/theturtle32/WebSocket-Node/blob/master/docs/W3CWebSocket.md",
                "title": null
              }
            }
          ],
          "text": "W3CWebSocket"
        },
        {
          "type": "text",
          "text": ":"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const WebSocketAsPromised = require('websocket-as-promised');\nconst W3CWebSocket = require('websocket').w3cwebsocket;\n\nconst wsp = new WebSocketAsPromised('ws://example.com', {\n  createWebSocket: url => new W3CWebSocket(url)\n});\n\nwsp.open()\n  .then(() => wsp.send('message'))\n  .then(() => wsp.close())\n  .catch(e => console.error(e));"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Usage with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.npmjs.com/package/ws",
                "title": null
              }
            }
          ],
          "text": "ws"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Here it is important to define "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "extractMessageData"
        },
        {
          "type": "text",
          "text": " option as event data are passed directly to "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "onmessage"
        },
        {
          "type": "text",
          "text": " handler, not as "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "event.data"
        },
        {
          "type": "text",
          "text": " by "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://html.spec.whatwg.org/multipage/comms.html#dom-messageevent-data",
                "title": null
              }
            }
          ],
          "text": "spec"
        },
        {
          "type": "text",
          "text": ":"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const WebSocketAsPromised = require('websocket-as-promised');\nconst WebSocket = require('ws');\n\nconst wsp = new WebSocketAsPromised('ws://example.com', {\n  createWebSocket: url => new WebSocket(url),\n  extractMessageData: event => event, // <- this is important\n});\n\nwsp.open()\n  .then(() => wsp.send('message'))\n  .then(() => wsp.close())\n  .catch(e => console.error(e));"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Sending raw data"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To send raw data use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".send()"
        },
        {
          "type": "text",
          "text": " method:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.send('foo');"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To handle raw data from server use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".onMessage"
        },
        {
          "type": "text",
          "text": " channel:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onMessage.addListener(data => console.log(data));"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Sending JSON"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To send JSON you should define "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "packMessage / unpackMessage"
        },
        {
          "type": "text",
          "text": " options:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const wsp = new WebSocketAsPromised(wsUrl, {\n  packMessage: data => JSON.stringify(data),\n  unpackMessage: data => JSON.parse(data)\n});"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To send data use "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".sendPacked()"
        },
        {
          "type": "text",
          "text": " method passing json as parameter:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.sendPacked({foo: 'bar'});"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "To read unpacked data from received message you can subscribe to "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "onUnpackedMessage"
        },
        {
          "type": "text",
          "text": " channel:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onUnpackedMessage.addListener(data => console.log(data.status));"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Sending binary"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Example of sending "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Uint8Array"
        },
        {
          "type": "text",
          "text": ":"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const wsp = new WebSocketAsPromised(wsUrl, {\n    packMessage: data => (new Uint8Array(data)).buffer,\n    unpackMessage: data => new Uint8Array(data),\n});\n\nwsp.open()\n  .then(() => wsp.sendPacked([1, 2, 3]))\n  .then(() => wsp.close())\n  .catch(e => console.error(e));"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Sending requests"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "em"
            }
          ],
          "text": "websocket-as-promised"
        },
        {
          "type": "text",
          "text": " provides simple request-response mechanism ("
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://www.jsonrpc.org",
                "title": null
              }
            }
          ],
          "text": "JSON RPC"
        },
        {
          "type": "text",
          "text": "). Method "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": ".sendRequest()"
        },
        {
          "type": "text",
          "text": " sends message with unique "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "requestId"
        },
        {
          "type": "text",
          "text": " and returns promise. That promise get resolved when response message with the same "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "requestId"
        },
        {
          "type": "text",
          "text": " comes. For reading/setting "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "requestId"
        },
        {
          "type": "text",
          "text": " from/to message there are two functions defined in options "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "attachRequestId / extractRequestId"
        },
        {
          "type": "text",
          "text": ":"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "const wsp = new WebSocketAsPromised(wsUrl, {\n  packMessage: data => JSON.stringify(data),\n  unpackMessage: data => JSON.parse(data),\n  attachRequestId: (data, requestId) => Object.assign({id: requestId}, data), // attach requestId to message as `id` field\n  extractRequestId: data => data && data.id,                                  // read requestId from message `id` field\n});\n\nwsp.open()\n .then(() => wsp.sendRequest({foo: 'bar'})) // actually sends {foo: 'bar', id: 'xxx'}, because `attachRequestId` defined above\n .then(response => console.log(response));  // waits server message with corresponding requestId: {id: 'xxx', ...}"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "By default "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "requestId"
        },
        {
          "type": "text",
          "text": " value is auto-generated, but you can set it manually:"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.sendRequest({foo: 'bar'}, {requestId: 42});"
        }
      ]
    },
    {
      "type": "blockquote",
      "content": [
        {
          "type": "paragraph",
          "content": [
            {
              "type": "text",
              "text": "Note: you should implement yourself attaching "
            },
            {
              "type": "text",
              "marks": [
                {
                  "type": "code"
                }
              ],
              "text": "requestId"
            },
            {
              "type": "text",
              "text": " on server side."
            }
          ]
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "API"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Classes"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            }
          ],
          "text": "WebSocketAsPromised"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Typedefs"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#Options",
                "title": null
              }
            }
          ],
          "text": "Options"
        },
        {
          "type": "text",
          "text": " : "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Object"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "WebSocketAsPromised"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": global class"
        }
      ]
    },
    {
      "type": "bullet_list",
      "content": [
        {
          "type": "list_item",
          "content": [
            {
              "type": "paragraph",
              "content": [
                {
                  "type": "text",
                  "marks": [
                    {
                      "type": "link",
                      "attrs": {
                        "href": "https://parsedown.org/demo#WebSocketAsPromised",
                        "title": null
                      }
                    }
                  ],
                  "text": "WebSocketAsPromised"
                }
              ]
            },
            {
              "type": "bullet_list",
              "content": [
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#new_WebSocketAsPromised_new",
                                "title": null
                              }
                            }
                          ],
                          "text": "new WebSocketAsPromised(url, [options])"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+ws",
                                "title": null
                              }
                            }
                          ],
                          "text": ".ws"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "WebSocket"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+isOpening",
                                "title": null
                              }
                            }
                          ],
                          "text": ".isOpening"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Boolean"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+isOpened",
                                "title": null
                              }
                            }
                          ],
                          "text": ".isOpened"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Boolean"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+isClosing",
                                "title": null
                              }
                            }
                          ],
                          "text": ".isClosing"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Boolean"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+isClosed",
                                "title": null
                              }
                            }
                          ],
                          "text": ".isClosed"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Boolean"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+onOpen",
                                "title": null
                              }
                            }
                          ],
                          "text": ".onOpen"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Channel"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+onSend",
                                "title": null
                              }
                            }
                          ],
                          "text": ".onSend"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Channel"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+onMessage",
                                "title": null
                              }
                            }
                          ],
                          "text": ".onMessage"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Channel"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+onUnpackedMessage",
                                "title": null
                              }
                            }
                          ],
                          "text": ".onUnpackedMessage"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Channel"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+onResponse",
                                "title": null
                              }
                            }
                          ],
                          "text": ".onResponse"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Channel"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+onClose",
                                "title": null
                              }
                            }
                          ],
                          "text": ".onClose"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Channel"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+onError",
                                "title": null
                              }
                            }
                          ],
                          "text": ".onError"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Channel"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+open",
                                "title": null
                              }
                            }
                          ],
                          "text": ".open()"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Promise.<Event>"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+sendRequest",
                                "title": null
                              }
                            }
                          ],
                          "text": ".sendRequest(data, [options])"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Promise"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+sendPacked",
                                "title": null
                              }
                            }
                          ],
                          "text": ".sendPacked(data)"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+send",
                                "title": null
                              }
                            }
                          ],
                          "text": ".send(data)"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+close",
                                "title": null
                              }
                            }
                          ],
                          "text": ".close()"
                        },
                        {
                          "type": "text",
                          "text": " ⇒ "
                        },
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "code"
                            }
                          ],
                          "text": "Promise.<Event>"
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "list_item",
                  "content": [
                    {
                      "type": "paragraph",
                      "content": [
                        {
                          "type": "text",
                          "marks": [
                            {
                              "type": "link",
                              "attrs": {
                                "href": "https://parsedown.org/demo#WebSocketAsPromised+removeAllListeners",
                                "title": null
                              }
                            }
                          ],
                          "text": ".removeAllListeners()"
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "new WebSocketAsPromised(url, [options])"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Constructor. Unlike original WebSocket it does not immediately open connection. Please call "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "open()"
        },
        {
          "type": "text",
          "text": " method to connect."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Param Type Description url "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "String"
        },
        {
          "type": "text",
          "text": " WebSocket URL [options] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#Options",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "Options"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.ws ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "WebSocket"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Returns original WebSocket instance created by "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "options.createWebSocket"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.isOpening ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Boolean"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Is WebSocket connection in opening state."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.isOpened ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Boolean"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Is WebSocket connection opened."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.isClosing ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Boolean"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Is WebSocket connection in closing state."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.isClosed ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Boolean"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Is WebSocket connection closed."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.onOpen ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Channel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Event channel triggered when connection is opened."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "See"
        },
        {
          "type": "text",
          "text": ": "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://vitalets.github.io/chnl/#channel",
                "title": null
              }
            }
          ],
          "text": "https://vitalets.github.io/chnl/#channel"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onOpen.addListener(() => console.log('Connection opened'));"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.onSend ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Channel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Event channel triggered every time when message is sent to server."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "See"
        },
        {
          "type": "text",
          "text": ": "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://vitalets.github.io/chnl/#channel",
                "title": null
              }
            }
          ],
          "text": "https://vitalets.github.io/chnl/#channel"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onSend.addListener(data => console.log('Message sent', data));"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.onMessage ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Channel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Event channel triggered every time when message received from server."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "See"
        },
        {
          "type": "text",
          "text": ": "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://vitalets.github.io/chnl/#channel",
                "title": null
              }
            }
          ],
          "text": "https://vitalets.github.io/chnl/#channel"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onMessage.addListener(message => console.log(message));"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.onUnpackedMessage ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Channel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Event channel triggered every time when received message is successfully unpacked. For example, if you are using JSON transport, the listener will receive already JSON parsed data."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "See"
        },
        {
          "type": "text",
          "text": ": "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://vitalets.github.io/chnl/#channel",
                "title": null
              }
            }
          ],
          "text": "https://vitalets.github.io/chnl/#channel"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onUnpackedMessage.addListener(data => console.log(data.foo));"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.onResponse ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Channel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Event channel triggered every time when response to some request comes. Received message considered a response if requestId is found in it."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "See"
        },
        {
          "type": "text",
          "text": ": "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://vitalets.github.io/chnl/#channel",
                "title": null
              }
            }
          ],
          "text": "https://vitalets.github.io/chnl/#channel"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onResponse.addListener(data => console.log(data));"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.onClose ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Channel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Event channel triggered when connection closed. Listener accepts single argument "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "{code, reason}"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "See"
        },
        {
          "type": "text",
          "text": ": "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://vitalets.github.io/chnl/#channel",
                "title": null
              }
            }
          ],
          "text": "https://vitalets.github.io/chnl/#channel"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onClose.addListener(event => console.log(`Connections closed: ${event.reason}`));"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.onError ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Channel"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Event channel triggered when by Websocket 'error' event."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance property of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "See"
        },
        {
          "type": "text",
          "text": ": "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://vitalets.github.io/chnl/#channel",
                "title": null
              }
            }
          ],
          "text": "https://vitalets.github.io/chnl/#channel"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Example"
        }
      ]
    },
    {
      "type": "code_block",
      "content": [
        {
          "type": "text",
          "text": "wsp.onError.addListener(event => console.error(event));"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.open() ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Promise.<Event>"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Opens WebSocket connection. If connection already opened, promise will be resolved with \"open event\"."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance method of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.sendRequest(data, [options]) ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Promise"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Performs request and waits for response."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance method of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Param Type Default data "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "*"
        },
        {
          "type": "text",
          "text": " [options] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Object"
        },
        {
          "type": "text",
          "text": " [options.requestId] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "String"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Number"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "<auto-generated>"
        },
        {
          "type": "text",
          "text": " [options.timeout] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Number"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "0"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.sendPacked(data)"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Packs data with "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "options.packMessage"
        },
        {
          "type": "text",
          "text": " and sends to the server."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance method of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Param Type data "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "*"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.send(data)"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Sends data without packing."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance method of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Param Type data "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "String"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Blob"
        },
        {
          "type": "text",
          "text": " | "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "ArrayBuffer"
        }
      ]
    },
    {
      "type": "paragraph"
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.close() ⇒ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Promise.<Event>"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Closes WebSocket connection. If connection already closed, promise will be resolved with \"close event\"."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance method of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 4
      },
      "content": [
        {
          "type": "text",
          "text": "wsp.removeAllListeners()"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Removes all listeners from WSP instance. Useful for cleanup."
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": instance method of "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/demo#WebSocketAsPromised",
                "title": null
              }
            },
            {
              "type": "code"
            }
          ],
          "text": "WebSocketAsPromised"
        },
        {
          "type": "hard_break"
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 3
      },
      "content": [
        {
          "type": "text",
          "text": "Options : "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Object"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Kind"
        },
        {
          "type": "text",
          "text": ": global typedef"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Defaults"
        },
        {
          "type": "text",
          "text": ": please see "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/vitalets/websocket-as-promised/blob/master/src/options.js",
                "title": null
              }
            }
          ],
          "text": "options.js"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "strong"
            }
          ],
          "text": "Properties"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Name Type Default Description [createWebSocket] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "function"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "url => new WebSocket(url)"
        },
        {
          "type": "text",
          "text": " custom function for WebSocket construction. [packMessage] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "function"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "noop"
        },
        {
          "type": "text",
          "text": " packs message for sending. For example, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "data => JSON.stringify(data)"
        },
        {
          "type": "text",
          "text": ". [unpackMessage] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "function"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "noop"
        },
        {
          "type": "text",
          "text": " unpacks received message. For example, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "data => JSON.parse(data)"
        },
        {
          "type": "text",
          "text": ". [attachRequestId] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "function"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "noop"
        },
        {
          "type": "text",
          "text": " injects request id into data. For example, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "(data, requestId) => Object.assign({requestId}, data)"
        },
        {
          "type": "text",
          "text": ". [extractRequestId] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "function"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "noop"
        },
        {
          "type": "text",
          "text": " extracts request id from received data. For example, "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "data => data.requestId"
        },
        {
          "type": "text",
          "text": ". [extractMessageData] "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "function"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "event => event.data"
        },
        {
          "type": "text",
          "text": " extracts data from event object. timeout "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Number"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "0"
        },
        {
          "type": "text",
          "text": " timeout for opening connection and sending messages. connectionTimeout "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "Number"
        },
        {
          "type": "text",
          "text": " "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "0"
        },
        {
          "type": "text",
          "text": " special timeout for opening connection, by default equals to "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "code"
            }
          ],
          "text": "timeout"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "Changelog"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "Please see "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://parsedown.org/CHANGELOG.md",
                "title": null
              }
            }
          ],
          "text": "CHANGELOG.md"
        },
        {
          "type": "text",
          "text": "."
        }
      ]
    },
    {
      "type": "heading",
      "attrs": {
        "level": 2
      },
      "content": [
        {
          "type": "text",
          "text": "License"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": "MIT @ "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/vitalets",
                "title": null
              }
            }
          ],
          "text": "Vitaliy Potapov"
        }
      ]
    },
    {
      "type": "paragraph",
      "content": [
        {
          "type": "text",
          "text": " * * *"
        },
        {
          "type": "hard_break"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "em"
            }
          ],
          "text": "If you love :heart: JavaScript and would like to track new trending repositories, "
        },
        {
          "type": "hard_break",
          "marks": [
            {
              "type": "em"
            }
          ]
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "em"
            }
          ],
          "text": "have a look on "
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "link",
              "attrs": {
                "href": "https://github.com/vitalets/github-trending-repos",
                "title": null
              }
            },
            {
              "type": "em"
            }
          ],
          "text": "vitalets/github-trending-repos"
        },
        {
          "type": "text",
          "marks": [
            {
              "type": "em"
            }
          ],
          "text": "."
        }
      ]
    },
    {
    "type": "paragraph",
    "content": [
      {
        "type": "text",
        "text": "👋 Congrats on joining "
      },
      {
        "type": "text",
        "marks": [
          {
            "type": "em"
          }
        ],
        "text": "Hipper"
      },
      {
        "type": "text",
        "text": "’s Engineering team, we’re stoked to have you onboard!"
      }
    ]
  },
  {
    "type": "heading",
    "attrs": {
      "level": 2
    },
    "content": [
      {
        "type": "text",
        "text": "Your first day"
      }
    ]
  },
  {
    "type": "paragraph",
    "content": [
      {
        "type": "text",
        "text": "First things first, you’ll need to get sorted with the following:"
      }
    ]
  },
  {
    "type": "bullet_list",
    "content": [
      {
        "type": "list_item",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Your *laptop* (our founder will take you to the Apple Store to pick out what you want)"
              }
            ]
          }
        ]
      },
      {
        "type": "list_item",
        "content": [
          {
            "type": "paragraph",
            "content": [
              {
                "type": "text",
                "text": "Something "
              },
              {
                "type": "text",
                "marks": [
                  {
                    "type": "code"
                  }
                ],
                "text": "<script>alert(\"Foo\");</script>"
              },
              {
                "type": "text",
                "text": " else"
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "type": "paragraph",
    "content": [
      {
        "type": "text",
        "text": "Hello "
      },
      {
        "type": "text",
        "marks": [
          {
            "type": "link",
            "attrs": {
              "href": "https://duckduckgo.com",
              "title": null
            }
          }
        ],
        "text": "there"
      },
      {
        "type": "text",
        "text": " now. "
      },
      {
        "type": "text",
        "marks": [
          {
            "type": "strong"
          }
        ],
        "text": "What"
      },
      {
        "type": "text",
        "text": " is going on "
      },
      {
        "type": "text",
        "marks": [
          {
            "type": "em"
          }
        ],
        "text": "here"
      },
      {
        "type": "text",
        "text": "?"
      }
    ]
  },
  {
    "type": "code_block",
    "content": [
      {
        "type": "text",
        "text": "Some code\n"
      }
    ]
  },
  {
    "type": "paragraph",
    "content": [
      {
        "type": "text",
        "text": "Help!"
      }
    ]
  }
  ]
}
